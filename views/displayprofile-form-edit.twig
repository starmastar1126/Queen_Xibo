{#
/*
 * Spring Signage Ltd - http://www.springsignage.com
 * Copyright (C) 2015 Spring Signage Ltd
 * (${FILE_NAME})
 */
// Go through each setting and output a form control to the theme.


// Tabs?
        foreach ($CLIENT_CONFIG[$displayProfile->type]['tabs'] as $tab) {
            // Create an empty array of form fields for this tab.
            $formFields[$tab['id']] = array();

            // Also add the tab
            $formTabs[] = Form::AddTab($tab['id'], $tab['name']);
        }

        foreach ($CLIENT_CONFIG[$displayProfile->type]['settings'] as $setting) {

            // Check to see if we have a value for this setting as yet, if so we use that.
            // TODO: there must be a way to improve this?
            foreach ($displayProfile->config as $set) {
                if ($set['name'] == $setting['name'])
                    $setting['value'] = $set['value'];
            }

            if ($setting['type'] == 'checkbox' && isset($setting['value']))
                $validated = $setting['value'];
            else if ($setting['fieldType'] == 'timePicker') {
                // Check if we are 0, if so then set to 00:00
                if ($setting['value'] == 0)
                    $validated = '00:00';
                else {
                    $validated = Date::getSystemDate($setting['value'] / 1000, 'H:i');
                }
            } else if (isset($setting['value']))
                $validated = \Kit::ValidateParam($setting['value'], $setting['type']);
            else
                $validated = $setting['default'];

            //Log::debug('Validated ' . $setting['name'] . '. [' . $setting['value'] . '] as [' . $validated . ']. With type ' . $setting['type']);

            // Each field needs to have a type, a name and a default
            $formFields[$setting['tabId']][] = array(
                'name' => $setting['name'],
                'fieldType' => $setting['fieldType'],
                'helpText' => $setting['helpText'],
                'title' => $setting['title'],
                'options' => ((isset($setting['options']) ? $setting['options'] : array())),
                'optionId' => 'id',
                'optionValue' => 'value',
                'validation' => ((isset($setting['validation']) ? $setting['validation'] : '')),
                'value' => $validated,
                'enabled' => $setting['enabled'],
                'groupClass' => NULL,
                'accesskey' => ''
            );
#}

{% extends "form-base.twig" %}
{% import "forms.twig" as forms %}

{% block formTitle %}
    {% trans "Edit Profile" %}
{% endblock %}

{% block formButtons %}
    {% trans "Save" %}, $("#displayProfileForm").submit()
    {% trans "Cancel" %}, XiboDialogClose()
    {% trans "Help" %}, XiboHelpRender("{{ help }}")
{% endblock %}

{% block formHtml %}
    <div class="row">
        <div class="col-md-12">
            <ul class="nav nav-tabs" role="tablist">
                {% set first = true %}
                {% for tab in displayProfile.configTabs %}
                    <li{% if first %} class="active"{% endif %}><a href="#{{ tab.id }}" role="tab" data-toggle="tab">{{ tab.name }}</a></li>
                    {% set first = false %}
                {% endfor %}
            </ul>
            <form id="displayProfileForm" class="XiboForm form-horizontal" method="put" action="{{ urlFor("displayProfile.edit", {id: displayProfile.displayProfileId}) }}">
                <div class="tab-content">
                {% for field in displayProfile.configDefault %}
                    {% if currentCat != field.tabId %}
                        {% if currentCat != "" %}
                            </div>
                        {% endif %}
                        <div class="tab-pane{% if currentCat == "" %} active{% endif %}" id="{{ field.tabId }}">
                            {% if field.tabId == "general" %}
                                {% set title %}{% trans "Name" %}{% endset %}
                                {% set helpText %}{% trans "The Name of the Profile - (1 - 50 characters)" %}{% endset %}
                                {{ forms.text("name", title, displayProfile.name, helpText) }}

                                {% set title %}{% trans "Default Profile?" %}{% endset %}
                                {% set helpText %}{% trans "Is this the default profile for all Displays of this type? Only 1 profile can be the default." %}{% endset %}
                                {{ forms.checkbox("isDefault", title, displayProfile.isDefault, helpText) }}
                            {% endif %}

                        {% set currentCat = field.tabId %}
                    {% endif %}
                    {# Now we have to output the relevant form field #}
                    {% if field.enabled != 1 %}
                        {{ forms.disabled(field.name, field.title, field.value, field.helpText) }}
                    {% elseif field.fieldType == "text" %}
                        {{ forms.text(field.name, field.title, field.value, field.helpText) }}
                    {% elseif field.fieldType == "number" %}
                        {{ forms.number(field.name, field.title, field.value, field.helpText) }}
                    {% elseif field.fieldType == "email" %}
                        {{ forms.email(field.name, field.title, field.value, field.helpText) }}
                    {% elseif field.fieldType == "checkbox" %}
                        {{ forms.checkbox(field.name, field.title, field.value, field.helpText) }}
                    {% elseif field.fieldType == "dropdown" %}
                        {{ forms.dropdown(field.name, "single", field.title, field.value, field.options, "id", "value") }}
                    {% elseif field.fieldType == "timezone" %}
                        <div class="form-group">
                            <label class="col-sm-2 control-label" for="{{ field.name }}" title="{{ field.helpText }}">{{ field.title }}</label>
                            <div class="col-sm-10">
                                <select class="form-control" name="{{ field.name }}">{{ field.options|raw }}</select>
                                <span class="help-block">{{ field.helpText }}</span>
                            </div>
                        </div>
                    {% endif %}
                {% endfor %}
                </div>
            </form>
        </div>
    </div>
{% endblock %}