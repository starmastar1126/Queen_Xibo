{#
/**
 * Copyright (C) 2020 Xibo Signage Ltd
 *
 * Xibo - Digital Signage - http://www.xibo.org.uk
 *
 * This file is part of Xibo.
 *
 * Xibo is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 *
 * Xibo is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.
 */
#}

<script type="text/javascript">
    function actionFormOpen(dialog) {

        onTargetChange(dialog);

        $(dialog).find("#target").on('change', function () {
            onTargetChange(dialog);
        });
    }

    function onTargetChange(dialog) {
        let target = $(dialog).find("#target").val();
        let targetId = $(dialog).find(".target-control");

        if (target === 'region') {
            targetId.removeClass("hidden");
        } else {
            $('#targetId').val('');
            targetId.addClass("hidden");
        }
    }

    function showActionsGrid(source, sourceId) {
        // create the table only when we are on Action tab
        $('.nav-tabs a').on('shown.bs.tab', function(event) {
            if ($(event.target).text() === 'Actions') {
                // initialize the table only if it's not already initialized
                if (!$.fn.DataTable.isDataTable('#actions')) {
                    // Configure the DataTable
                    let table = $("#actions").DataTable({
                        "language": dataTablesLanguage,
                        serverSide: true,
                        stateSave: true,
                        stateDuration: 0,
                        "filter": false,
                        searchDelay: 3000,
                        "order": [[0, "asc"]],
                        ajax: {
                            url: "{{ url_for("action.search") }}",
                            "data": function (d) {
                                $.extend(d, {
                                    "source": source,
                                    "sourceId": sourceId
                                });
                            }
                        },
                        "columns": [
                            {"data": "actionId",},
                            {"data": "ownerId", "visible": false},
                            {"data": "triggerType"},
                            {"data": "triggerCode", "visible": false},
                            {"data": "actionType"},
                            {"data": "target"},
                            {"data": "targetId"},
                            {
                                "orderable": false,
                                "data": dataTableButtonsColumn
                            }
                        ]
                    });
                    table.on('draw', dataTableDraw);
                    table.on('processing.dt', dataTableProcessing);
                    dataTableAddButtons(table, $('#actions_wrapper').find('.col-sm-6').eq(1));
                }
            }
        });
    }


</script>