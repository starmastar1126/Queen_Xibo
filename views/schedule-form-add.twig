{#
/*
 * Spring Signage Ltd - http://www.springsignage.com
 * Copyright (C) 2015 Spring Signage Ltd
 * (${FILE_NAME})
 */
// Two tabs
        $tabs = array();
        $tabs[] = Form::AddTab('general', __('General'));
        $tabs[] = Form::AddTab('repeats', __('Repeats'));
        Theme::Set('form_tabs', $tabs);

        $formFields = array();

        // List of Display Groups
        $optionGroups = array(
            array('id' => 'group', 'label' => __('Groups')),
            array('id' => 'display', 'label' => __('Displays')) 
        );



        $formFields['general'][] = Form::AddMultiCombo(
            'DisplayGroupIDs[]',
            __('Display'),
            $displayGroupIds,
            array('group' => $groups, 'display' => $displays),
            'displaygroupid',
            'displaygroup',
            __('Please select one or more displays / groups for this event to be shown on.'),
            'd', '', true, '', '', '', $optionGroups, array(array('name' => 'data-live-search', 'value' => "true"), array('name' => 'data-selected-text-format', 'value' => "count > 4")));

        // Time controls
        $formFields['general'][] = Form::AddText('starttimeControl', __('Start Time'), NULL,
            __('Select the start time for this event'), 's', 'required');

        $formFields['general'][] = Form::AddText('endtimeControl', __('End Time'), NULL,
            __('Select the end time for this event'), 'e', 'required');

        // Add two hidden fields to always carry the ISO date
        $formFields['general'][] = Form::AddHidden('starttime', NULL);
        $formFields['general'][] = Form::AddHidden('endtime', NULL);

        // Generate a list of layouts.
        $layouts = $user->CampaignList(NULL, false /* isRetired */, false /* show Empty */);

        $optionGroups = array(
            array('id' => 'campaign', 'label' => __('Campaigns')),
            array('id' => 'layout', 'label' => __('Layouts'))
        );

        $layoutOptions = array();
        $campaignOptions = array();

        foreach ($layouts as $layout) {

            if ($layout['islayoutspecific'] == 1) {
                $layoutOptions[] = array(
                    'id' => $layout['campaignid'],
                    'value' => $layout['campaign']
                );
            } else {
                $campaignOptions[] = array(
                    'id' => $layout['campaignid'],
                    'value' => $layout['campaign']
                );
            }
        }

        $formFields['general'][] = Form::AddCombo(
            'CampaignID',
            __('Layout / Campaign'),
            NULL,
            array('campaign' => $campaignOptions, 'layout' => $layoutOptions),
            'id',
            'value',
            __('Please select a Layout or Campaign for this Event to show'),
            'l', '', true, '', '', '', $optionGroups);

        $formFields['general'][] = Form::AddNumber('DisplayOrder', __('Display Order'), NULL,
            __('Please select the order this event should appear in relation to others when there is more than one event scheduled'), 'o');

        $formFields['general'][] = Form::AddCheckbox('is_priority', __('Priority'),
            NULL, __('Sets whether or not this event has priority. If set the event will be show in preference to other events.'),
            'p');

        $formFields['repeats'][] = Form::AddCombo(
            'rec_type',
            __('Repeats'),
            NULL,
            array(
                array('id' => '', 'name' => __('None')),
                array('id' => 'Minute', 'name' => __('Per Minute')),
                array('id' => 'Hour', 'name' => __('Hourly')),
                array('id' => 'Day', 'name' => __('Daily')),
                array('id' => 'Week', 'name' => __('Weekly')),
                array('id' => 'Month', 'name' => __('Monthly')),
                array('id' => 'Year', 'name' => __('Yearly'))
            ),
            'id',
            'name',
            __('What type of repeat is required?'),
            'r');

        $formFields['repeats'][] = Form::AddNumber('rec_detail', __('Repeat every'), NULL,
            __('How often does this event repeat?'), 'o', '', 'repeat-control-group');

        $formFields['repeats'][] = Form::AddText('rec_rangeControl', __('Until'), NULL,
            __('When should this event stop repeating?'), 'u', '', 'repeat-control-group');

        $formFields['repeats'][] = Form::AddHidden('rec_range', NULL);

        // Set some field dependencies
        $response->AddFieldAction('rec_type', 'init', '', array('.repeat-control-group' => array('display' => 'none')));
        $response->AddFieldAction('rec_type', 'init', '', array('.repeat-control-group' => array('display' => 'block')), "not");
        $response->AddFieldAction('rec_type', 'change', '', array('.repeat-control-group' => array('display' => 'none')));
        $response->AddFieldAction('rec_type', 'change', '', array('.repeat-control-group' => array('display' => 'block')), "not");
#}

{% extends "form-base.twig" %}
{% import "forms.twig" as forms %}

{% block formTitle %}
    {% trans "Schedule Event" %}
{% endblock %}

{% block callBack %}setupScheduleForm{% endblock %}

{% block formButtons %}
    {% trans "Help" %}, XiboHelpRender("{{ help }}")
    {% trans "Cancel" %}, XiboDialogClose()
    {% trans "Save" %}, $("#scheduleAddForm").submit()
    {% trans "Next" %}, $("#<<id>>").submit()
{% endblock %}

{% block formHtml %}
    <div class="row">
        <div class="col-md-12">
            <ul class="nav nav-tabs" role="tablist">
                <li class="active"><a href="#general" role="tab" data-toggle="tab"><span>{% trans "General" %}</span></a></li>
                <li><a href="#repeats" role="tab" data-toggle="tab"><span>{% trans "Repeats" %}</span></a></li>
            </ul>
            <form id="scheduleAddForm" class="XiboForm form-horizontal" method="post" action="{{ urlFor("schedule.add") }}">
                <div class="tab-content">
                    <div class="tab-pane active" id="general">
                {# display groups #}

                {# start/end time #}

                {% set title %}{% trans "Start Time" %}{% endset %}
                {% set helpText %}{% trans "Select the start time for this event" %}{% endset %}
                {{ forms.text("fromDt", title, "", helpText) }}

                {% set title %}{% trans "End Time" %}{% endset %}
                {% set helpText %}{% trans "Select the end time for this event" %}{% endset %}
                {{ forms.text("toDt", title, "", helpText) }}

                {# Add two hidden fields to always carry the ISO date #}
                {# Generate a list of layouts. #}

                {# nah very wrong...#}
                {% set title %}{% trans "Layout / Campaign" %}{% endset %}
                {% set helpText %}{% trans "Please select a Layout or Campaign for this Event to show" %}{% endset %}
                {% set aaa = [
                { id: campaign, value: campaignOptions },
                { id: layout, value: layoutOptions }
                ] %}
                {{ forms.dropdown("campaignId", "single", title, "", aaa, "id", "value", helpText) }}
  
                {{ forms.number("displayOrder", "Display Order", displayOrder, "Please select the order this event should appear in relation to others when there is more than one event scheduled") }}
                
                {% set title %}{% trans "Priority" %}{% endset %}
                {% set helpText %}{% trans "Sets whether or not this event has priority. If set the event will be show in preference to other events." %}{% endset %}
                {{ forms.checkbox("isPriority", title, isPriority, helpText) }}

                    </div>
                    
                    <div class="tab-pane" id="repeats">
                    {# ask about none! date search etc #}
                        {% set title %}{% trans "Repeats" %}{% endset %}
                        {% set helpText %}{% trans "What type of repeat is required?" %}{% endset %}
                        {% set perminute %}{% trans "Per Minute" %}{% endset %}
                        {% set hourly %}{% trans "Hourly" %}{% endset %}
                        {% set daily %}{% trans "Daily" %}{% endset %}
                        {% set weekly %}{% trans "Weekly" %}{% endset %}
                        {% set monthly %}{% trans "Monthly" %}{% endset %}
                        {% set yearly %}{% trans "Yearly" %}{% endset %}
                        {% set reccurenceType = [
                        { id: "", name: none },
                        { id: Minute, name: perminute },
                        { id: Hour, name: hourly},
                        { id: Day, name: daily},
                        { id: Week, name: weekly},
                        { id: Month, name: monthly},
                        { id: Year, name: yearly}
                        ] %}
                        {{ forms.dropdown("reccurenceType", "single", title, "", reccurenceType, "id", "name", helpText) }}

                        {{ forms.number("reccurenceDetail", "Repeat every", reccurenceDetail, "How often does this event repeat?") }}

                        {% set title %}{% trans "Until" %}{% endset %}
                        {% set helpText %}{% trans "When should this event stop repeating?" %}{% endset %}
                        {{ forms.text("reccurenceRange", title, "", helpText) }}
                        
                        {# hidden thingies etc#}

                    </div>
            </form>
        </div>
    </div>
{% endblock %}