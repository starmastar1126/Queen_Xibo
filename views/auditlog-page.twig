{#
/*
 * Spring Signage Ltd - http://www.springsignage.com
 * Copyright (C) 2015 Spring Signage Ltd
 * (${FILE_NAME})
 */
#}
{% extends "authed.twig" %}
{% import "inline.twig" as inline %}

{% block actionMenu %}
    <ul class="nav nav-pills pull-right">
        <li><a title="{% trans "Open the Filter Form" %}" href="#" onclick="ToggleFilterView('Filter')">{% trans "Filter" %}</a></li>
        <li><a class="XiboFormButton" title="{% trans "Export raw data to CSV" %}" href="{{ urlFor("auditLog.export.form") }}">{% trans "Export" %}</a></li>
        <li><a id="refreshLog" title="{% trans "Refresh the Log" %}" href="#">{% trans "Refresh" %}</a></li>
    </ul>
{% endblock %}


{% block pageContent %}
    <div class="widget">
        <div class="widget-title">{% trans "Audit Log" %}</div>
        <div class="widget-body">
            <div class="XiboGrid" id="{{ random() }}">
                <div class="XiboFilter">
                    <div class="FilterDiv" id="Filter">
                        <form class="form-inline">
                            {{ inline.date("filterFromDt", "From Date", defaults.fromDt) }}
                            {{ inline.date("filterToDt", "To Date", defaults.toDt) }}
                            {{ inline.text("filterUser", "User", defaults.user) }}
                            {{ inline.text("filterEntity", "Entity", defaults.entity) }}

                            {{ inline.checkbox("XiboFilterPinned", "Keep Open", defaults.filterPinned) }}
                        </form>
                    </div>
                </div>
                <div class="XiboData">
                    <table id="logs" class="table table-striped">
                        <thead>
                            <tr>
                                <th>{% trans "ID" %}</th>
                                <th>{% trans "Date" %}</th>
                                <th>{% trans "User" %}</th>
                                <th>{% trans "Entity" %}</th>
                                <th>{% trans "Message" %}</th>
                                <th>{% trans "Object" %}</th>
                            </tr>
                        </thead>
                        <tbody>

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javaScript %}
    {% raw %}
    <script type="text/x-handlebars-template" id="table-array-viewer">
        <a class="arrayViewerToggle" href="#"><span class="fa fa-search"></span></a>
        <table class="arrayViewer">
            {{#each items}}
            <tr>
                <td>{{ @key }}</td>
                <td>{{ this }}</td>
            </tr>
            {{/each}}
        </table>
    </script>
    {% endraw %}
    <script type="text/javascript">

        var arrayViewer = Handlebars.compile($("#table-array-viewer").html());

        var table = $("#logs").DataTable({
            serverSide: true,
            filter: false,
            searchDelay: 3000,
            "order": [[ 0, "desc"]],
            ajax: {
                url: "{{ urlFor("auditLog.search") }}",
                "data": function(d) {
                    $.extend(d, $("#logs").closest(".XiboGrid").find(".FilterDiv form").serializeObject());
                }
            },
            "columns": [
                { "data": "logId" },
                { "data": "logDate", "render": dataTableDateFromUnix },
                { "data": "userName" },
                { "data": "entity" },
                { "data": "message" },
                {
                    "data": function(data, type, row, meta) {
                        if (type != "display")
                            return "";

                        return arrayViewer({"items": data.objectAfter});
                    },
                    "sortable": false
                }
            ]
        });

        table.on('draw', function(e, settings) {
            dataTableDraw(e, settings);

            $(".arrayViewerToggle").click(function() {
                $(this).parent().find(".arrayViewer").toggle();
            });
        });
        table.on('processing.dt', dataTableProcessing);

        $("#refreshLog").click(function() {
            table.ajax.reload();
        });
    </script>
{% endblock %}