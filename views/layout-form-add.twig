{#
/*
 * Spring Signage Ltd - http://www.springsignage.com
 * Copyright (C) 2015 Spring Signage Ltd
 * (${FILE_NAME})
 */
Theme::Set('form_id', 'LayoutForm');

        // Two tabs
        $tabs = array();
        $tabs[] = Form::AddTab('general', __('General'));
        $tabs[] = Form::AddTab('description', __('Description'));

        Theme::Set('form_tabs', $tabs);

        $formFields = array();
        $formFields['general'][] = Form::AddText('layout', __('Name'), (isset($layout['layout']) ? $layout['layout'] : NULL), __('The Name of the Layout - (1 - 50 characters)'), 'n', 'required');
        $formFields['general'][] = Form::AddText('tags', __('Tags'), (isset($layout['tags']) ? $layout['tags'] : NULL), __('Tags for this layout - used when searching for it. Comma delimited. (1 - 250 characters)'), 't', 'maxlength="250"');

        $formFields['description'][] = Form::AddMultiText('description', __('Description'), (isset($layout['description']) ? $layout['description'] : NULL),
            __('An optional description of the Layout. (1 - 250 characters)'), 'd', 5, 'maxlength="250"');

        // We are adding
        Theme::Set('form_action', $this->urlFor('layoutAdd'));

        $templates = $this->getUser()->TemplateList();
        $templates = array_map(function($element) { return array('layoutid' => $element->layoutId, 'layout' => $element->layout); }, $templates);
        array_unshift($templates, array('layoutid' => '0', 'layout' => 'None'));

        $formFields['general'][] = Form::AddCombo(
            'templateid',
            __('Template'),
            NULL,
            $templates,
            'layoutid',
            'layout',
            __('Optionally choose a template you have saved before.'),
            't');

        $formFields['general'][] = Form::AddCombo(
            'resolutionid',
            __('Resolution'),
            NULL,
            $this->getUser()->ResolutionList(),
            'resolutionId',
            'resolution',
            __('Choose the resolution this Layout should be designed for.'),
            'r',
            'resolution-group');

         $this->getState()->AddFieldAction('templateid', 'change', 0, array('.resolution-group' => array('display' => 'block')));
         $this->getState()->AddFieldAction('templateid', 'change', 0, array('.resolution-group' => array('display' => 'none')), "not");

        Theme::Set('form_fields_general', $formFields['general']);
        Theme::Set('form_fields_description', $formFields['description']);


         $this->getState()->SetFormRequestResponse(null, __('Add Layout'), '350px', '275px');
         $this->getState()->AddButton(__('Help'), 'XiboHelpRender("' . Help::Link('Layout', 'Add') . '")');
         $this->getState()->AddButton(__('Cancel'), 'XiboDialogClose()');
         $this->getState()->AddButton(__('Save'), '$("#LayoutForm").submit()');
#}

{% extends "form-base.twig" %}
{% import "forms.twig" as forms %}

{% block formTitle %}
    
{% endblock %}

{% block formButtons %}
    
{% endblock %}

{% block formHtml %}
    <div class="row">
        <div class="col-md-12">
            <form id="" class="form-horizontal" method="post" action="">

            </form>
        </div>
    </div>
{% endblock %}