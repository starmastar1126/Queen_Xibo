{#
/*
 * Spring Signage Ltd - http://www.springsignage.com
 * Copyright (C) 2018 Spring Signage Ltd
 * (${FILE_NAME})
 */
#}

{% extends "authed.twig" %}
{% import "inline.twig" as inline %}

{% block pageContent %}

    <!-- Editor structure -->
    <div id="layout-editor" data-layout-id="{{ layout.layoutId }}"></div>

    <div class="loading-overlay">
        <i class="fa fa-spinner fa-spin loading-icon"></i>
    </div>

{% endblock %}

    {% block javaScript %}     
        <script src="{{ theme.rootUri() }}dist/layoutDesigner.bundle.min.js"></script>
        <script type="text/javascript">

            let modulesList = [];
        
            {% for module in modules %}
                modulesList.push({{ module.getModule()|json_encode|raw }});
            {% endfor %}

            let libraryUpload = {{ libraryUpload|json_encode|raw }};

            const serverMode = "{{ settings.SERVER_MODE }}";
            
            const urlsForApi = {
                layout: {
                    get: {
                        url: "{{ urlFor("layout.search") }}",
                        type: 'GET'
                    },
                    getForm: {
                        url: "{{ urlFor("layout.background.form") }}",
                        type: 'GET'
                    },
                    saveForm: {
                        url: "{{ urlFor("layout.edit.background") }}",
                        type: 'PUT'
                    },
                    downloadBackground: {
                        url: "{{ urlFor("layout.download.background") }}",
                        type: 'GET'
                    },
                    preview: {
                        url: "{{ urlFor("layout.preview") }}",
                        type: 'GET'
                    },
                    checkout: {
                        url: "{{ urlFor("layout.checkout") }}",
                        type: 'PUT'
                    }, 
                    publish: {
                        url: "{{ urlFor("layout.publish") }}",
                        type: 'PUT'
                    },
                    list: {
                        url: "{{ urlFor("layout.view") }}"
                    },
                    status: {
                        url: "{{ urlFor("layout.status") }}"
                    },
                    designer: {
                        url: "{{ urlFor("layout.designer") }}"
                    }
                },
                region: {
                    transform: {
                        url: "{{ urlFor("region.position.all") }}",
                        type: 'PUT',
                        useMainObjectId: true
                    },
                    getForm: {
                        url: "{{ urlFor("region.edit.form") }}",
                        type: 'GET'
                    },
                    saveForm: {
                        url: "{{ urlFor("region.edit") }}",
                        type: 'PUT'
                    },
                    create: {
                        url: "{{ urlFor("region.add") }}",
                        type: 'POST',
                        useMainObjectId: true
                    },
                    delete: {
                        url: "{{ urlFor("region.delete") }}",
                        type: 'DELETE'
                    },
                    preview: {
                        url: "{{ urlFor("region.preview") }}",
                        type: 'GET'
                    }
                },
                widget: {
                    getForm: {
                        url: "{{ urlFor("module.widget.edit.form") }}",
                        type: 'GET'
                    },
                    saveForm: {
                        url: "{{ urlFor("module.widget.edit") }}",
                        type: 'PUT'
                    },
                    preview: {
                        url: "{{ urlFor("region.preview") }}",
                        type: 'GET'
                    },
                    addForm: {
                        url: "{{ urlFor("module.widget.add.form") }}",
                        type: 'GET'
                    },
                    add: {
                        url: "{{ urlFor("module.widget.add") }}",
                        type: 'POST'
                    },
                    delete: {
                        url: "{{ urlFor("module.widget.delete") }}",
                        type: 'DELETE'
                    },
                    getAudio: {
                        url: "{{ urlFor("module.widget.audio.form") }}",
                        type: 'GET'
                    },
                    saveAudio:  {
                        url: "{{ urlFor("module.widget.audio") }}",
                        type: 'PUT'
                    },
                    getExpiry: {
                        url: "{{ urlFor("module.widget.expiry.form") }}",
                        type: 'GET'
                    },
                    saveExpiry:  {
                        url: "{{ urlFor("module.widget.expiry") }}",
                        type: 'PUT'
                    },
                    getTransition: {
                        url: "{{ urlFor("module.widget.transition.edit.form") }}",
                        type: 'GET'
                    },
                    saveTransition:  {
                        url: "{{ urlFor("module.widget.transition.edit") }}",
                        type: 'PUT'
                    }
                },
                library: {
                    get: {
                        url: "{{ urlFor("library.search") }}",
                        type: 'GET'
                    }
                },
                playlist: {
                    addMedia: {
                        url: "{{ urlFor("playlist.library.assign") }}",
                        type: 'POST'
                    },
                    addWidgetForm: {
                        url: "{{ urlFor("module.widget.add.form") }}",
                        type: 'GET'
                    },
                    addWidget: {
                        url: "{{ urlFor("module.widget.add") }}",
                        type: 'POST'
                    },
                    order: {
                        url: "{{ urlFor("playlist.order") }}",
                        type: 'POST'
                    }
                },
                user: {
                    getPref: {
                        url: "{{ urlFor("user.pref") }}",
                        type: 'GET'
                    },
                    savePref: {
                        url: "{{ urlFor("user.pref") }}",
                        type: 'POST'
                    }
                }
            };

            var translation = {
                savePositionsFirst: "{% autoescape "js" %}{{ "Please save the pending position changes first by clicking Save Positions or cancel by clicking Undo."|trans }}{% endautoescape %}"
            };

            var librarySearchUrl = "{{ urlFor("library.search") }}";
            var libraryAddUrl = "{{ urlFor("library.add") }}";
            var uploadFormUpdateAllDefault = {% if settings.LIBRARY_MEDIA_UPDATEINALL_CHECKB == 1 %}true{% else %}false{% endif %};
            var uploadFormDeleteOldDefault = {% if settings.LIBRARY_MEDIA_DELETEOLDVER_CHECKB == 1 %}true{% else %}false{% endif %};
            {% autoescape "js" %}
            var playlistTrans = {
                uploadMessage: "{% trans "Upload media" %}",
                addFiles: "{% trans "Add files" %}",
                startUpload: "{% trans "Start upload" %}",
                cancelUpload: "{% trans "Cancel upload" %}",
                viewLibrary: "{% trans "View Library" %}"
            };
            var playlistAddFilesTrans = {
                uploadMessage: "{% trans "Replace" %}",
                addFiles: "{% trans "Add Replacement" %}",
                startUpload: "{% trans "Start Replace" %}",
                cancelUpload: "{% trans "Cancel Replace" %}",
                updateInLayouts: {
                    title: "{% trans "Update this media in all layouts it is assigned to?" %}",
                    helpText: "{% trans "Note: It will only be updated in layouts you have permission to edit." %}"
                },
                deleteOldRevisions: {
                    title: "{% trans "Delete the old version?" %}",
                    helpText: "{% trans "Completely remove the old version of this media item if a new file is being uploaded." %}"
                }
            };
             var layoutDesignerTrans = {
                publishTitle: "{% trans "Publish" %}",
                publishMessage: "{% trans "Are you sure you want to publish this Layout? If it is already in use the update will automatically get pushed." %}",
                checkoutTitle: "{% trans "Checkout" %}",
                checkoutMessage: "{% trans "Layout is not editable, please checkout!" %}",
                undo: "{% trans "Undo" %}"
            };
            var datasetQueryBuilderTranslations = {
                ascTitle: "{% trans "Ascending" %}",
                descTitle: "{% trans "Descending" %}",
                filterOptions: [
                    {
                        id: "starts-with",
                        value: "{% trans "starts with" %}"
                    }, {
                        id: "ends-with",
                        value: "{% trans "ends with" %}"
                    }, {
                        id: "contains",
                        value: "{% trans "contains" %}"
                    }, {
                        id: "equals",
                        value: "{% trans "equals" %}"
                    }, {
                        id: "not-starts-with",
                        value: "{% trans "does not start with" %}"
                    }, {
                        id: "not-ends-with",
                        value: "{% trans "does not end with" %}"
                    }, {
                        id: "not-contains",
                        value: "{% trans "does not contain" %}"
                    }, {
                        id: "not-equals",
                        value: "{% trans "does not equal" %}"
                    }, {
                        id: "greater-than",
                        value: "{% trans "greater than" %}"
                    }, {
                        id: "less-than",
                        value: "{% trans "less than" %}"
                    }
                ],
                filterOperatorOptions: [
                    {
                        id: "OR",
                        value: "{% trans "Or" %}"
                    }, {
                        id: "AND",
                        value: "{% trans "And" %}"
                    }
                ]
            };
            {% endautoescape %}
        </script>

        {% for module in modules %}
            {% if module.layoutDesignerJavaScript() != "" %}
                {% include module.layoutDesignerJavaScript() ~ ".twig" %}
            {% endif %}
        {% endfor %}

        {% include "region-designer-javascript.twig" %}

    {% endblock %}
