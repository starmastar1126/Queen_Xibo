{#
/*
 * Spring Signage Ltd - http://www.springsignage.com
 * Copyright (C) 2016 Spring Signage Ltd
 * (${FILE_NAME})
 */

#}


{% raw %}
<script type="text/x-handlebars-template" id="dataSetViewOrderClauseTemplate">
    <div class="form-group">
        <label class="col-sm-2 control-label" for="orderClause[]">{{ title }}</label>
        <div class="col-sm-6">
            <select class="form-control" name="orderClause[]">
                <option value=""></option>
                {{#each columns}}
                    <option value="{{ heading }}" {{#if_eq heading ../orderClause}}selected{{/if_eq}}>{{ heading }}</option>
                {{/each}}
            </select>
        </div>
        <div class="col-sm-3">
            <label for="orderClauseDirection[]">
                <select class="form-control" name="orderClauseDirection[]">
                    <option value="ASC" {{#if orderClauseAsc}}selected{{/if}}>{{ ascTitle }}</option>
                    <option value="DESC" {{#if orderClauseDesc}}selected{{/if}}>{{ descTitle }}</option>
                </select>
            </label>
        </div>
        <div class="col-sm-1">
            <button class="btn btn-default btn-sm"><i class="fa {{ buttonGlyph }}"></i></button>
        </div>
    </div>
</script>

{% endraw %}

<script type="text/javascript">
    Handlebars.registerHelper('if_eq', function(a, b, opts) {
        if(a == b) // Or === depending on your needs
            return opts.fn(this);
        else
            return opts.inverse(this);
    });

    function dataSetFormSetup(dialog) {

        $("#columnsIn, #columnsOut").sortable({
            connectWith: '.connectedSortable',
            dropOnEmpty: true
        }).disableSelection();

        // If all 3 of the template fields are empty, then the template should be reapplied.
        if (!$("#overrideTemplate").is(":checked") && $("#styleSheet").val() == "") {
            // Reapply
            var templateId = $("#templateId").val();

            $.each($('.bootbox').data().extra.templates, function(index, value) {
                if (value.id == templateId) {
                    $("#styleSheet").val(value.css);
                }
            });
        }

        $("#templateId").on('change', function() {
            // Check to see if the override template check box is unchecked
            if (!$("#overrideTemplate").is(":checked")) {

                var templateId = $("#templateId").val();

                $.each($('.bootbox').data().extra.templates, function(index, value) {
                    if (value.id == templateId) {
                        $("#styleSheet").val(value.css);
                    }
                });
            }
        });

        // Stop Codes.
        var orderClauseFields = $("#orderClause");
        var orderClauseTemplate = Handlebars.compile($("#dataSetViewOrderClauseTemplate").html());
        var ascTitle = "{% trans "Ascending" %}";
        var descTitle = "{% trans "Descending" %}";

        if (dialog.data().extra.orderClause.length == 0) {
            // Add a template row
            var context = {columns: dialog.data().extra.columns, title: "1", orderClause: "", orderClauseAsc: "", orderClauseDesc: "", buttonGlyph: "fa-plus", ascTitle: ascTitle, descTitle: descTitle};
            orderClauseFields.append(orderClauseTemplate(context));
        } else {
            // For each of the existing codes, create form components
            var i = 0;
            $.each(dialog.data().extra.orderClause, function (index, field) {
                i++;

                var direction = (field.orderClauseDirection == "ASC");

                var context = {columns: dialog.data().extra.columns, title: i, orderClause: field.orderClause, orderClauseAsc: direction, orderClauseDesc: !direction, buttonGlyph: ((i == 1) ? "fa-plus" : "fa-minus"), ascTitle: ascTitle, descTitle: descTitle};

                orderClauseFields.append(orderClauseTemplate(context));
            });
        }

        // Nabble the resulting buttons
        orderClauseFields.on("click", "button", function (e) {
            e.preventDefault();

            // find the gylph
            if ($(this).find("i").hasClass("fa-plus")) {
                var context = {columns: dialog.data().extra.columns, title: orderClauseFields.find('.form-group').length + 1, orderClause: "", orderClauseAsc: "", orderClauseDesc: "", buttonGlyph: "fa-minus", ascTitle: ascTitle, descTitle: descTitle};
                orderClauseFields.append(orderClauseTemplate(context));
            } else {
                // Remove this row
                $(this).closest(".form-group").remove();
            }
        });
    }

    function DataSetViewSubmit(apply) {
        var form = $("#dataSetViewEditForm");

        $($("#columnsIn").sortable('toArray')).each(function() {
            form.append('<input type="hidden" name="dataSetColumnId[]" value="' + this + '" />');
        });

        // Submit the form
        if (apply == 1)
            form.data("apply", true);

        form.submit();
    }
</script>