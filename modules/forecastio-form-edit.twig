{#
/*
 * Spring Signage Ltd - http://www.springsignage.com
 * Copyright (C) 2015 Spring Signage Ltd
 * (${FILE_NAME})
 */
        // Configure the field dependencies
        $this->SetFieldDepencencies($response);

        // Append the Templates to the response
        $response->extra = $this->module->settings['templates'];

        // Modules should be rendered using the theme engine.
        Theme::Set('form_fields_general', $formFields['general']);
        Theme::Set('form_fields_advanced', $formFields['advanced']);
        Theme::Set('form_fields_forecast', $formFields['forecast']);
        $response->html = Theme::RenderReturn('form_render');

        // The response object outputs the required JSON object to the browser
        // which is then processed by the CMS JavaScript library (xibo-cms.js).
        $response->AddButton(__('Request Forecast'), 'requestTab("forecast", "index.php?p=module&q=exec&mod=' . $this->getModuleType() . '&method=requestTab&widgetId=' . $this->getWidgetId() . '")');
        $this->configureFormButtons($response);

        $response->dialogTitle = __('Forecast IO');
        $response->callBack = 'forecastIoFormSetup';

        // Add a dependency
        $locationControls_0 = array(
            '.locationControls' => array('display' => 'block')
        );

        $locationControls_1 = array(
            '.locationControls' => array('display' => 'none')
        );

        $response->AddFieldAction('useDisplayLocation', 'init', false, $locationControls_0, 'is:checked');
        $response->AddFieldAction('useDisplayLocation', 'change', false, $locationControls_0, 'is:checked');
        $response->AddFieldAction('useDisplayLocation', 'init', true, $locationControls_1, 'is:checked');
        $response->AddFieldAction('useDisplayLocation', 'change', true, $locationControls_1, 'is:checked');
        $response->AddFieldAction('templateId', 'init', 'picture', array('.icon-controls' => array('display' => 'block')));
        $response->AddFieldAction('templateId', 'change', 'picture', array('.icon-controls' => array('display' => 'block')));
        $response->AddFieldAction('templateId', 'init', 'picture', array('.icon-controls' => array('display' => 'none')), 'not');
        $response->AddFieldAction('templateId', 'change', 'picture', array('.icon-controls' => array('display' => 'none')), 'not');

        // When the override template check box is ticked, we want to expose the advanced controls and we want to hide the template selector
        $response->AddFieldAction('overrideTemplate', 'init', false,
            array(
                '.template-override-controls' => array('display' => 'none'),
                '.reloadTemplateButton' => array('display' => 'none'),
                '.template-selector-control' => array('display' => 'block')
            ), 'is:checked');
        $response->AddFieldAction('overrideTemplate', 'change', false,
            array(
                '.template-override-controls' => array('display' => 'none'),
                '.reloadTemplateButton' => array('display' => 'none'),
                '.template-selector-control' => array('display' => 'block')
            ), 'is:checked');
        $response->AddFieldAction('overrideTemplate', 'init', true,
            array(
                '.template-override-controls' => array('display' => 'block'),
                '.reloadTemplateButton' => array('display' => 'block'),
                '.template-selector-control' => array('display' => 'none')
            ), 'is:checked');
        $response->AddFieldAction('overrideTemplate', 'change', true,
            array(
                '.template-override-controls' => array('display' => 'block'),
                '.reloadTemplateButton' => array('display' => 'block'),
                '.template-selector-control' => array('display' => 'none')
            ), 'is:checked');
#}

{% extends "form-base.twig" %}
{% import "forms.twig" as forms %}

{% block formTitle %}
    {% trans "Forecast IO" %}
{% endblock %}

{% block formButtons %}
    {% trans "Help" %}, XiboHelpRender("{{ help }}")
    {% trans "Cancel" %}, XiboDialogClose()
    {% trans "Get Forecast" %}, requestTab("forecast", "{{ urlFor("module.widget.tab.form", {tab: "forecast"}) }}")
    {% trans "Save" %}, $("#forecastEditForm").submit()
{% endblock %}

{% block callBack %}forecastIoFormSetup{% endblock %}

{% block formHtml %}
    <div class="row">
        <div class="col-md-12">
            <ul class="nav nav-tabs" role="tablist">
                <li class="active"><a href="#general" role="tab" data-toggle="tab"><span>{% trans "General" %}</span></a></li>
                <li><a href="#advanced" role="tab" data-toggle="tab"><span>{% trans "Appearance" %}</span></a></li>
                <li><a href="#forecast" role="tab" data-toggle="tab"><span>{% trans "Forecast" %}</span></a></li>
            </ul>
            <form id="forecastEditForm" class="XiboForm form-horizontal" method="put" action="{{ urlFor("module.widget.edit", {id: module.widget.widgetId}) }}">
                <div class="tab-content">
                    <div class="tab-pane active" id="general">
                       {# not sure why in old code here there is not getOptions for name etc...I added that for now I think it should be there #} 
                        {% set title %}{% trans "Name" %}{% endset %}
                        {% set helpText %}{% trans "An optional name for this media" %}{% endset %}
                        {{ forms.text("name", title, module.getOption("name"), helpText) }}

                        {% set title %}{% trans "Duration" %}{% endset %}
                        {% set helpText %}{% trans "The duration in seconds this item should be displayed." %}{% endset %}
                        {{ forms.number("duration", title, module.getDuration(), helpText, "", "required") }}

                        {% set title %}{% trans "Use the Display Location" %}{% endset %}
                        {% set helpText %}{% trans "Use the location configured on the display" %}{% endset %}
                        {{ forms.checkbox("useDisplayLocation", title, module.getOption("useDisplayLocation"), helpText) }}

                        {% set title %}{% trans "'Latitude" %}{% endset %}
                        {% set helpText %}{% trans "The Latitude for this weather module" %}{% endset %}
                        {{ forms.number("latitude", title, module.getOption("latitude"), helpText, "", "", "locationcontols") }}

                        {% set title %}{% trans "Longitude" %}{% endset %}
                        {% set helpText %}{% trans "The Longitude for this weather module" %}{% endset %}
                        {{ forms.number("longitude", title, module.getOption("longitude"), helpText, "", "", "locationcontrols") }}

                        {% set title %}{% trans "Colour" %}{% endset %}
                        {% set helpText %}{% trans "Please select a colour for the foreground text." %}{% endset %}
                        {{ forms.text("color", title, module.getOption("color", "#000"), helpText, "", "required") }}
                    </div>

                    <div class="tab-pane" id="advanced">
{# as with ticker and twitter not sure how to refrence $this->module->settings['templates'] just templates ? can't test at the moment#}
                        {% set title %}{% trans "Weather Template" %}{% endset %}
                        {% set helpText %}{% trans "Select the template you would like to apply. This can be overridden using the check box below." %}{% endset %}
                        {{ forms.dropdown("templateId", "single", title, module.getOpion("templateId"), $this->module->settings['templates'], "id", "value", helpText, "", "template-selector-control") }}

                    {# $this->iconsAvailable() and $this->unitsAvailable() and Translate::GetLocale(2),
            $this->supportedLanguages() not entirely sure how to refrence those #}

                        {% set title %}{% trans "Icons" %}{% endset %}
                        {% set helpText %}{% trans "Select the icon set you would like to use." %}{% endset %}
                        {{ forms.dropdown("icons", "single", title, module.getOpion("icons"), module.iconsAvailable(), "id", "value", helpText, "", "icon-controls") }}

                        {% set title %}{% trans "Size" %}{% endset %}
                        {% set helpText %}{% trans "Set the size. Start at 1 and work up until the widget fits your region appropriately." %}{% endset %}
                        {{ forms.number("size", title, module.getOption("size", 1), helpText, "", "number", "template-selector-control") }}

                        {% set title %}{% trans "Units" %}{% endset %}
                        {% set helpText %}{% trans "Select the units you would like to use." %}{% endset %}
                        {{ forms.dropdown("units", "single", title, module.getOpion("units"), module.unitsAvailable(), "id", "value", helpText) }}

                        {% set title %}{% trans "Language" %}{% endset %}
                        {% set helpText %}{% trans "Select the language you would like to use." %}{% endset %}
                        {{ forms.dropdown("lang", "single", title, Translate::GetLocale(2), module.supportedLanguages(), "id", "value", helpText) }}

                        {% set title %}{% trans "Update Interval (mins)" %}{% endset %}
                        {% set helpText %}{% trans "Please enter the update interval in minutes. This should be kept as high as possible. For example, if the data will only change once per hour this could be set to 60." %}{% endset %}
                        {{ forms.number("updateInterval", title, module.getOption("updateInterval", 60), helpText, "", "required") }}

                        {% set title %}{% trans "Only show Daytime weather conditions" %}{% endset %}
                        {% set helpText %}{% trans "Tick if you would like to only show the Daytime weather conditions." %}{% endset %}
                        {{ forms.checkbox("dayConditionsOnly", title, 1, helpText) }}

                        {% set title %}{% trans "Override the template?" %}{% endset %}
                        {% set helpText %}{% trans "Tick if you would like to override the template." %}{% endset %}
                        {{ forms.checkbox("overrideTemplate'", title, 0, helpText) }}

                        {% set title %}{% trans "Template for Current Forecast" %}{% endset %}
                        {% set helpText %}{% trans "Enter the template for the current forecast. For a list of substitutions click "Request Forecast" below." %}{% endset %}
                        {{ forms.textarea("currentTemplate", title, "", helpText, "", 10, "required", "template-override-controls") }}

                        {% set title %}{% trans "Template for Daily Forecast" %}{% endset %}
                        {% set helpText %}{% trans "Enter the template for the daily forecast. Replaces [dailyForecast] in main template." %}{% endset %}
                        {{ forms.textarea("dailyTemplate", title, "", helpText, "", 10, "", "template-override-controls") }}

                        {% set title %}{% trans "CSS Style Sheet" %}{% endset %}
                        {% set helpText %}{% trans "Enter a CSS style sheet to style the weather widget" %}{% endset %}
                        {{ forms.textarea("styleSheet", title, "", helpText, "", 10, "required", "template-override-controls") }}
                    </div>
                    <div class="tab-pane" id="forecast">
                        {% set message %}{% trans "Please press Request Forecast" %}{% endset %}
                        {{ forms.message(message) }}  
                    </div>
                </div>
            </form>
        </div>
    </div>
{% endblock %}