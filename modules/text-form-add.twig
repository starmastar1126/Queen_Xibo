{#
/*
 * Spring Signage Ltd - http://www.springsignage.com
 * Copyright (C) 2015 Spring Signage Ltd
 * (${FILE_NAME})
 */
// Two tabs
        $tabs = array();
        $tabs[] = Form::AddTab('general', __('General'), array(array('name' => 'enlarge', 'value' => true)));
        $tabs[] = Form::AddTab('options', __('Options'));

        Theme::Set('form_tabs', $tabs);

        $formFields = array();

        $formFields['options'][] = Form::AddText('name', __('Name'), NULL,
            __('An optional name for this media'), 'n');

        $formFields['options'][] = Form::AddCombo(
            'effect',
            __('Effect'),
            $this->GetOption('effect'),
            array(
                array('effectid' => 'none', 'effect' => __('None')),
                array('effectid' => 'fade', 'effect' => __('Fade')),
                array('effectid' => 'fadeout', 'effect' => __('Fade Out')),
                array('effectid' => 'scrollHorz', 'effect' => __('Scroll Horizontal')),
                array('effectid' => 'scrollVert', 'effect' => __('Scroll Vertical')),
                array('effectid' => 'flipHorz', 'effect' => __('Flip Horizontal')),
                array('effectid' => 'flipVert', 'effect' => __('Flip Vertical')),
                array('effectid' => 'shuffle', 'effect' => __('Shuffle')),
                array('effectid' => 'tileSlide', 'effect' => __('Tile Slide')),
                array('effectid' => 'tileBlind', 'effect' => __('Tile Blinds')),
                array('effectid' => 'marqueeLeft', 'effect' => __('Marquee Left')),
                array('effectid' => 'marqueeRight', 'effect' => __('Marquee Right')),
                array('effectid' => 'marqueeUp', 'effect' => __('Marquee Up')),
                array('effectid' => 'marqueeDown', 'effect' => __('Marquee Down')),
            ),
            'effectid',
            'effect',
            __('Please select the effect that will be used. Some effects will transition between paragraphs in the text. Marquee effects are CPU intensive and may not be suitable for lower power displays.'),
            'e');

        $formFields['options'][] = Form::AddNumber('speed', __('Speed'), NULL,
            __('The transition speed of the selected effect in milliseconds (normal = 1000) or the Marquee Speed in a low to high scale (normal = 1).'), 's', NULL, 'effect-controls');

        // A list of web safe colours
        $formFields['options'][] = Form::AddText('backgroundColor', __('Background Colour'), NULL,
            __('The selected effect works best with a background colour. Optionally add one here.'), 'c', NULL, 'effect-controls');

        $formFields['options'][] = Form::AddNumber('duration', __('Duration'), NULL,
            __('The duration in seconds this should be displayed'), 'd', 'required');

        // Handle the substitutions as RAW items
        $subs = array(
            array('Substitute' => 'Clock'),
            array('Substitute' => 'Clock|HH:mm'),
            array('Substitute' => 'Date'),
            array('Substitute' => 'Clock|DD/MM/YYYY')
        );
        Theme::Set('substitutions', $subs);
        $formFields['general'][] = Form::AddRaw(Theme::RenderReturn('media_form_text_edit'));

        $formFields['general'][] = Form::AddMultiText('ta_text', NULL, NULL,
            __('Enter the text to display. Please note that the background colour has automatically coloured to your layout background colour.'), 't', 10);

        Theme::Set('form_fields_general', $formFields['general']);
        Theme::Set('form_fields_options', $formFields['options']);

        // Add a dependency
        $response->AddFieldAction('effect', 'init', 'none', array('.effect-controls' => array('display' => 'none')));
        $response->AddFieldAction('effect', 'change', 'none', array('.effect-controls' => array('display' => 'none')));
        $response->AddFieldAction('effect', 'init', 'none', array('.effect-controls' => array('display' => 'block')), 'not');
        $response->AddFieldAction('effect', 'change', 'none', array('.effect-controls' => array('display' => 'block')), 'not');

        $response->html = Theme::RenderReturn('form_render');
        $response->callBack = 'text_callback';
        $response->dialogSize = 'large';
#}

{% extends "form-base.twig" %}
{% import "forms.twig" as forms %}

{% block formTitle %}
    {% trans "Edit Text" %}
{% endblock %}

{% block formButtons %}
    {% trans "Save" %}, $("#<<id>>").submit()
    {% trans "Cancel" %}, XiboDialogClose()
    {% trans "Help" %}, XiboHelpRender("{{ help }}")
{% endblock %}

{% block callBack %}forecastIoFormSetup{% endblock %}

{% block formHtml %}
    <div class="row">
        <div class="col-md-12">
            <form id="<<id>>" class="XiboForm form-horizontal" method="post" action="{{ urlFor("module.widget.add", {type: module.widget.type, id: playlist.playlistId}) }}">

            </form>
        </div>
    </div>
{% endblock %}