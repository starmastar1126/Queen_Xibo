{#
/*
 * Graph Xibo Module
 * Copyright (C) 2018 Lukas Zurschmiede
 *
 * This Xibo-Module is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version. 
 *
 * This Xibo-Module is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with This Xibo-Module.  If not, see <http://www.gnu.org/licenses/>.
 */
#}

{% extends "form-base.twig" %}
{% import "forms.twig" as forms %}

{% block formTitle %}
    {% trans "Edit Graph Page" %}
{% endblock %}

{% block formButtons %}
    {% trans "Cancel" %}, XiboDialogClose()
    {% trans "Save" %}, graphFormSubmit()
{% endblock %}

{% block callBack %}graphFormSetup{% endblock %}

{% block formFieldActions %}
  [
    {
      "field": "useDuration", "trigger": "init",
      "operation": "is:checked", "value": false,
      "actions": { ".duration-fields": { "display": "none" } }
    },{
      "field": "useDuration", "trigger": "init",
      "operation": "is:checked", "value": true,
      "actions": { ".duration-fields": { "display": "block" } }
    },{
      "field": "useDuration", "trigger": "change",
      "operation": "is:checked", "value": false,
      "actions": { ".duration-fields": { "display": "none" } }
    },{
      "field": "useDuration", "trigger": "change",
      "operation": "is:checked", "value": true,
      "actions": { ".duration-fields": { "display": "block" } }
    },
    {
      "field": "showLegend", "trigger": "init",
      "operation": "is:checked", "value": false,
      "actions": {
        ".legendCenter": { "display": "none" },
        ".legendX": { "display": "none" },
        ".legendY": { "display": "none" },
        ".legendRight": { "display": "none" },
        ".legendBottom": { "display": "none" }
      }
    },{
      "field": "showLegend", "trigger": "init",
      "operation": "is:checked", "value": true,
      "actions": {
        ".legendCenter": { "display": "block" },
        ".legendX": { "display": "block" },
        ".legendY": { "display": "block" },
        ".legendRight": { "display": "block" },
        ".legendBottom": { "display": "block" }
      }
    },{
      "field": "showLegend", "trigger": "change",
      "operation": "is:checked", "value": false,
      "actions": {
        ".legendCenter": { "display": "none" },
        ".legendX": { "display": "none" },
        ".legendY": { "display": "none" },
        ".legendRight": { "display": "none" },
        ".legendBottom": { "display": "none" }
      }
    },{
      "field": "showLegend", "trigger": "change",
      "operation": "is:checked", "value": true,
      "actions": {
        ".legendCenter": { "display": "block" },
        ".legendX": { "display": "block" },
        ".legendY": { "display": "block" },
        ".legendRight": { "display": "block" },
        ".legendBottom": { "display": "block" }
      }
    },
    {
      "field": "legendCenter", "trigger": "init",
      "operation": "is:checked", "value": true,
      "actions": {
        ".legendX": { "display": "none" },
        ".legendRight": { "display": "none" }
      }
    },{
      "field": "legendCenter", "trigger": "init",
      "operation": "is:checked", "value": false,
      "actions": {
        ".legendX": { "display": "block" },
        ".legendRight": { "display": "block" }
      }
    },{
      "field": "legendCenter", "trigger": "change",
      "operation": "is:checked", "value": true,
      "actions": {
        ".legendX": { "display": "none" },
        ".legendRight": { "display": "none" }
      }
    },{
      "field": "legendCenter", "trigger": "change",
      "operation": "is:checked", "value": false,
      "actions": {
        ".legendX": { "display": "block" },
        ".legendRight": { "display": "block" }
      }
    }
  ]
{% endblock %}

{% block callBack %}graphFormSetup{% endblock %}

{% block extra %}{{ {
  "fetch": urlFor('module.widget.tab.form', {id: module.widget.widgetId, tab: 'columns'})
}|json_encode|raw }}{% endblock %}

{% block formHtml %}
    <div class="row">
        <div class="col-md-12">
            <ul class="nav nav-tabs" role="tablist">
                <li class="active"><a href="#general" role="tab" data-toggle="tab"><span>{% trans "General" %}</span></a></li>
                <li><a href="#dataset" role="tab" data-toggle="tab" data-enlarge="1"><span>{% trans "Dataset" %}</span></a></li>
                <li><a href="#advanced" role="tab" data-toggle="tab"><span>{% trans "Advanced" %}</span></a></li>
            </ul>
            <form id="graphEditForm" class="XiboForm form-horizontal" method="put" action="{{ urlFor("module.widget.edit", {id: module.widget.widgetId}) }}">
                <div class="tab-content">
                    <div class="tab-pane active" id="general">
                        {% set helpText %}{% trans "An optional name for this widget" %}{% endset %}
                        {% set title %}{% trans "Name" %}{% endset %}
                        {{ forms.input("name", title, module.getOption("name"), helpText) }}

                        {% set title %}{% trans "Set a duration?" %}{% endset %}
                        {% set helpText %}{% trans "Select to provide a specific duration for this Widget" %}{% endset %}
                        {{ forms.checkbox("useDuration", title, module.getUseDuration(), helpText) }}

                        {% set title %}{% trans "Duration" %}{% endset %}
                        {% set helpText %}{% trans "The duration in seconds this should be displayed" %}{% endset %}
                        {{ forms.number("duration", title, module.getDuration(), helpText, "duration-fields", "required") }}
                        
                        {% set title %}{% trans "Background Color" %}{% endset %}
                        {{ forms.input("backgroundColor", title, module.getOption("backgroundColor"), "", "background-color-group") }}
                    </div>
                    
                    <div class="tab-pane" id="dataset">
                        {% set bar_chart %}{% trans "Bar chart" %}{% endset %}
                        {% set line_chart %}{% trans "Line chart" %}{% endset %}
                        {% set horizontal_bar_chart %}{% trans "Horizontal Bar Chart" %}{% endset %}
                        {% set pie_chart %}{% trans "Pie Chart" %}{% endset %}
                        {% set donut_chart %}{% trans "Donut Chart" %}{% endset %}
                        {% set radar_chart %}{% trans "Radar Chart" %}{% endset %}
                        {% set vertical_progress %}{% trans "Vertical Progress Chart" %}{% endset %}
                        {% set horizontal_progress %}{% trans "Horizontal Progress Chart" %}{% endset %}
                        {% set waterfall_chart %}{% trans "Waterfall Chart" %}{% endset %}
                        {% set options = [
                        { typeid: "line_chart", type: line_chart },
                        { typeid: "pie_chart", type: pie_chart },
                        { typeid: "donut_chart", type: donut_chart },
                        { typeid: "bar_chart", type: bar_chart },
                        { typeid: "horizontal_bar_chart", type: horizontal_bar_chart },
                        { typeid: "waterfall_chart", type: waterfall_chart },
                        { typeid: "vertical_progress", type: vertical_progress },
                        { typeid: "horizontal_progress", type: horizontal_progress },
                        { typeid: "radar_chart", type: radar_chart },
                        ] %}
                        
                        {% set title %}{% trans "Graph Type" %}{% endset %}
                        {{ forms.dropdown("graphType", "single", title, module.getOption("graphType"), options, "typeid", "type", "") }}
                        
                        {% set title %}{% trans "DataSet" %}{% endset %}
                        {{ forms.dropdown("dataSetId", "single", title, module.getOption("dataSetId"), module.dataSets(), "dataSetId", "dataSet", "", "dataset-fields") }}
                        
                        <hr />
                        
                        {% set title %}{% trans "X-Identifier" %}{% endset %}
                        {% set helpText %}{% trans "Which column should be used for labeling the X-Axis?" %}{% endset %}
                        {{ forms.dropdown("labelColumn", "single", title, module.getOption("labelColumn"), module.labelColumns(module.getOption("dataSetId")), "", "", helpText, "dataset-fields") }}
                        
                        {% set title %}{% trans "Series-Identifier" %}{% endset %}
                        {% set helpText %}{% trans "Which column contains the identifier for showing series of data?" %}{% endset %}
                        {{ forms.dropdown("seriesColumn", "single", title, module.getOption("seriesColumn"), module.labelColumns(module.getOption("dataSetId")), "", "", helpText, "dataset-fields") }}
                        
                        {% set message %}{% trans "Below you can select the columns to be shown in the graph - drag and drop to reorder and to move between lists." %}{% endset %}
                        {{ forms.message(message) }}

                        {% set selected = module.selectedValueColumns(module.getOption("dataSetId")) %}
                        {% set available = module.valueColumns(module.getOption("dataSetId"), selected) %}
                        <div class="row">
                            <div class="col-md-10 col-md-offset-2">
                                <div class="connectedlist col-sm-6">
                                    <p class="text-info">{% trans "Columns Selected" %}</p>
                                    <ul id="columnsIn" class="connectedSortable">
                                        {% for column in selected %}
                                            <li id="{{ column }}" class="li-sortable">{{ column }}</li>
                                        {% endfor %}
                                    </ul>
                                </div>
                                <div class="connectedlist col-sm-6">
                                    <p class="text-info">{% trans "Columns Available" %}</p>
                                    <ul id="columnsOut" class="connectedSortable">
                                        {% for column in available %}
                                            <li id="{{ column }}" class="li-sortable">{{ column }}</li>
                                        {% endfor %}
                                    </ul>
                                </div>
                            </div>
                        </div>
                        
                    </div>

                    <div class="tab-pane" id="advanced">
                        {% set title %}{% trans "Show legend?" %}{% endset %}
                        {% set helpText %}{% trans "Should a legend be shown? For the labels you may enter a special JavaScript Method below." %}{% endset %}
                        {{ forms.checkbox("showLegend", title, module.getOption("showLegend"), helpText) }}
                        
                        {% set title %}{% trans "Horizontally centered" %}{% endset %}
                        {% set helpText %}{% trans "Center the legend horizontally" %}{% endset %}
                        {{ forms.checkbox("legendCenter", title, module.getOption("legendCenter"), helpText, "legendCenter") }}
                        
                        {% set title %}{% trans "Horizontal (in px)" %}{% endset %}
                        {{ forms.number("legendX", title, module.getOption("legendX"), "", "legendX") }}
                        
                        {% set title %}{% trans "From right" %}{% endset %}
                        {{ forms.checkbox("legendRight", title, module.getOption("legendRight"), "", "legendRight") }}
                        
                        {% set title %}{% trans "Vertical (in px)" %}{% endset %}
                        {{ forms.number("legendY", title, module.getOption("legendY"), "", "legendY") }}
                        
                        {% set title %}{% trans "From bottom" %}{% endset %}
                        {{ forms.checkbox("legendBottom", title, module.getOption("legendBottom"), "", "legendBottom") }}
                    </div>
                </div>
            </form>
        </div>
    </div>
{% endblock %}
