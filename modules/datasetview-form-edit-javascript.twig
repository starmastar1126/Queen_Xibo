{#
/**
 * Copyright (C) 2020 Xibo Signage Ltd
 *
 * Xibo - Digital Signage - http://www.xibo.org.uk
 *
 * This file is part of Xibo.
 *
 * Xibo is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 *
 * Xibo is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.
 */
#}

<script type="text/javascript">
    $(document).ready(function() {
        var fieldCounts = 0;
        let initalCustomField =`{{ module.getOption('customField')}}`;
        console.log('------------', initalCustomField)
        if (initalCustomField != '') {
            initalCustomField =JSON.parse($('<textarea />').html(initalCustomField).text());

            Object.keys(initalCustomField).forEach(function(key) {
                $("#customfield").append(`
                    <div class="col-md-12 row custom-item">
                        <div class="connectedlist col-sm-5">
                            <select class="li-sortable custom-header" >
                                {% for column in module.dataSetColumns() %}
                                <option value="{{ column.heading}}" class="li-sortable"` + ('{{column.heading}}' == key? `selected>`:`>`) + `{{ column.heading }}</option>
                                {% endfor %}
                            </select>
                        </div>
                        <div class="connectedlist col-sm-5">
                            <input type="text" class="li-sortable custom-field" value="` + initalCustomField[key] +`">
                        </div>
                        <div class="connectedlist col-sm-2 remove-row">
                            <input class="custom-field-button remove-btn" type="button" value="-">
                        </div>
                    </div>
                `);
                
                console.log('Key : ' + key + ', Value : ' + initalCustomField[key])
            })
        }

        updateValues()


        $('.add-btn').click(function(){
            getNewRow()
        })

        $('body').on('click', '.remove-btn', function(){
            removeRow($(this))
        })

        function updateValues() {
            let json={};
            $('.custom-item').each(function() {
                var keyElement = $(this).find('.custom-header');
                var valueElement = $(this).find('.custom-field');
                json[keyElement.val()] = valueElement.val();
            })

            fieldCounts = $('.custom-header').first().find('option').length;

            let jsonSring = JSON.stringify(json);
            $("input[name='customfield']").val(jsonSring);
            console.log('update values', jsonSring)
        }

        function getNewRow() {
            var count = $('.custom-item').length;
            console.log(count, '   ----   ', fieldCounts);
            if (count < fieldCounts  || fieldCounts == 0) {
                $("#customfield").append(`
                    <div class="col-md-12 row custom-item">
                        <div class="connectedlist col-sm-5">
                            <select class="li-sortable custom-header" >
                                {% for column in module.dataSetColumns() %}
                                <option value="{{ column.heading}}" class="li-sortable">{{ column.heading}}</option>
                                {% endfor %}
                            </select>
                        </div>
                        <div class="connectedlist col-sm-5">
                            <input type="text" class="li-sortable custom-field" value=""">
                        </div>
                        <div class="connectedlist col-sm-2 remove-row">
                        <input class="custom-field-button remove-btn" type="button" value="-">
                        </div>
                    </div>
                `);
                updateValues();
            } else {
                alert('filled all');
            }
        }

        function removeRow(obj){
            $(obj).parent().parent().remove();
            updateValues()
        }

        $("#customfield").on("keyup", "input.custom-field", function(){
            let fieldArray = $("input.custom-field");
            let selectArray = $(".custom-header"); 
            let json={};
            console.log(fieldArray); 
            for(i=0;i<fieldArray.length;i++)
            {
                let input = $(fieldArray[i]);
                let select = $(selectArray[i]);
                json[select.val()] = input.val();
            }
            let jsonSring = JSON.stringify(json);
            console.log('===========', jsonSring)
            $("input[name='customfield']").val(jsonSring); 
        })
    });  
</script>